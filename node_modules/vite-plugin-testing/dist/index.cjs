'use strict';

const image = require('@rollup/plugin-image');
const vue = require('@vitejs/plugin-vue');
const path = require('path');
const readline = require('readline');
const vitePluginStaticCopy = require('vite-plugin-static-copy');

function _interopDefaultCompat (e) { return e && typeof e === 'object' && 'default' in e ? e.default : e; }

const image__default = /*#__PURE__*/_interopDefaultCompat(image);
const vue__default = /*#__PURE__*/_interopDefaultCompat(vue);
const readline__default = /*#__PURE__*/_interopDefaultCompat(readline);

const defaultUrl = "https://staging.repairdesk.co/u/start-serve";
const defaultItem = {
  src: "src/options.json",
  dest: ""
};
function cyan(str) {
  return `\x1B[36m${str}\x1B[0m`;
}
const handleOpenURL = (openUrl) => ({
  name: "handle-open-url",
  configureServer(server) {
    const onInput = (input) => {
      if (input === "\r" || input === "\n") {
        console.log("Enter key pressed");
        import('open').then((res) => {
          res.default(openUrl);
        });
      }
      if (input === "" || input === "") {
        server.close().finally(() => process.exit(1));
      }
    };
    readline__default.emitKeypressEvents(process.stdin);
    process.stdin.setRawMode(true);
    process.stdin.on("data", onInput).setEncoding("utf8").resume();
    server.httpServer.on("close", () => {
      process.stdin.off("data", onInput).pause();
    });
    server.httpServer?.on("listening", () => {
      setTimeout(() => {
        setTimeout(() => {
          server.config.logger.info(`
  ${cyan("Press Enter to open url")} `);
        });
      });
    });
  }
});
function index(options, env) {
  const plugins = [
    {
      ...image__default(),
      enforce: "pre"
    },
    vue__default(),
    handleOpenURL(defaultUrl)
  ];
  if (env == "build") {
    plugins.push(vitePluginStaticCopy.viteStaticCopy({
      targets: !!options.icon ? [
        defaultItem,
        {
          src: path.resolve(__dirname, options.icon),
          dest: "icon"
        }
      ] : [defaultItem]
    }));
  }
  return plugins;
}

module.exports = index;
